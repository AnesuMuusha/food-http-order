{"ast":null,"code":"var _jsxFileName = \"/home/ayshan/Documents/POportfolio/Food/food-http-order/src/store/CartProvider.tsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.quantity;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.quantity + action.item.quantity\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.quantity === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.quantity - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === \"CLEAR\") {\n    return defaultCartState;\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const clearCartHandler = () => {\n    dispatchCartAction({\n      type: 'CLEAR'\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    clearCart: clearCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","quantity","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","amount","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","clearCartHandler","cartContext","addItem","removeItem","clearCart","children"],"sources":["/home/ayshan/Documents/POportfolio/Food/food-http-order/src/store/CartProvider.tsx"],"sourcesContent":["import React, { useReducer } from 'react';\nimport CartContext from './cart-context.tsx';\n\ninterface Item {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n}\n\ninterface CartState {\n  items: Item[];\n  totalAmount: number;\n}\n\ninterface Props {\n  children: React.ReactNode;\n}\n\n\ntype ActionType = { type: 'ADD', item: Item } | { type: 'REMOVE', id: string } | { type: 'CLEAR' };\n\n\nconst defaultCartState:CartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state:CartState, action:ActionType) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.quantity;\n\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.quantity + action.item.quantity,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.quantity === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem, amount: existingItem.quantity - 1 };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === \"CLEAR\"){\n    return defaultCartState;\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider:React.FC<Props> = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item:Item) => {\n    dispatchCartAction({ type: 'ADD', item: item });\n  };\n\n  const removeItemFromCartHandler = (id: string) => {\n    dispatchCartAction({ type: 'REMOVE', id: id });\n  };\n\n  const clearCartHandler = () => {\n    dispatchCartAction({type: 'CLEAR'});\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    clearCart: clearCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}